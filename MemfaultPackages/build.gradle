// Top-level build file where you can add configuration options common to all sub-projects/modules.

import static com.memfault.bort.buildsrc.BortConfigDownloaderKt.tryRefreshBortSystemPropertyConfig

// Try to refresh bort_generated.properties before configuring the :bort project:
gradle.beforeProject { project ->
    if (project.path != ":bort") return
    if (rootProject.properties["SKIP_DOWNLOAD_SYSTEM_PROPERTY_CONFIG"] == "1") {
        project.logger.warn("> Skipping download of bort_generated.properties from server...")
        return
    }

    tryRefreshBortSystemPropertyConfig(
            rootProject.rootDir.absolutePath,
            { msg, exc -> rootProject.logger.log(LogLevel.WARN, msg, exc) },
            rootProject.properties["MEMFAULT_API_BASE_URL"],
            bortProperty("MEMFAULT_PROJECT_API_KEY"),
    )
}

buildscript {
    apply from: 'properties.gradle'

    gradle.taskGraph.whenReady { graph ->
        verifyBortProperties()
        warnLegacyBortProperties()
    }

    ext.versions = [
            'kotlin'                           : '1.4.10',
            'kotlinCoroutines'                 : '1.3.9',
            'minSdk'                           : bortProperty("MIN_SDK_VERSION") as Integer,
            'targetSdk'                        : bortProperty("TARGET_SDK_VERSION") as Integer,
            'compileSdk'                       : bortProperty("COMPILE_SDK_VERSION") as Integer,
            'buildTools'                       : bortProperty("BUILD_TOOLS_VERSION") as String,
            'androidGradlePlugin'              : '4.1.0',
            'coroutinesTest'                   : '1.3.9',
            'retrofitKtxSerializationConverter': '0.8.0',
            'ktlintGradle'                     : '9.4.1',
            'ktxSerializationJson'             : '1.0.0',
            'junit'                            : '5.7.0',
            'leakCanary'                       : '2.5',
            'mockk'                            : '1.10.2',
            'mockito'                          : '2.28.2',
            'mockitoKotlin'                    : '2.2.0',
            'okhttp'                           : '4.9.0',
            'okio'                             : '2.9.0',
            'preference'                       : '1.1.1',
            'retrofit'                         : '2.9.0',
            'work'                             : '2.4.0'
    ]
    ext.deps = [
            'android'      : [
                    'gradlePlugin'    : "com.android.tools.build:gradle:${versions.androidGradlePlugin}",
                    'preference'      : "androidx.preference:preference:${versions.preference}",
                    'work'            : "androidx.work:work-runtime-ktx:${versions.work}"
            ],
            'kotlin'       : [
                    'ktlintGradle' : "org.jlleitschuh.gradle:ktlint-gradle:${versions.ktlintGradle}",
                    'gradlePlugin': "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
                    'stdlib'      : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
                    'coroutines'  : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinCoroutines}"
            ],
            'serialization': [
                    'plugin'   : "org.jetbrains.kotlin:kotlin-serialization:${versions.kotlin}",
                    'json'     : "org.jetbrains.kotlinx:kotlinx-serialization-json:${versions.ktxSerializationJson}",
                    'converter': "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:${versions.retrofitKtxSerializationConverter}",
            ],
            'debug'        : [
                    'leakCanary': "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}",
            ],
            'retrofit'     : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            'okhttp'       : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
            'okio'         : "com.squareup.okio:okio:${versions.okio}",
            'test'         : [
                    'coroutines'   : "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutinesTest}",
                    'junitApi'     : "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
                    'junitEngine'  : "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
                    'mockk'        : "io.mockk:mockk:${versions.mockk}",
                    'mockito'      : "org.mockito:mockito-core:${versions.mockito}",
                    'mockitoKotlin': "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockitoKotlin}",
                    'mockWebServer': "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"
            ]
    ]
    repositories {
        google()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
    dependencies {
        classpath deps.android.gradlePlugin
        classpath deps.kotlin.gradlePlugin
        classpath deps.kotlin.ktlintGradle
        classpath deps.serialization.plugin
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"

    ktlint {
        version = "0.39.0"
        android = true
        outputColorName = "RED"
    }
}
