apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'common-android'

android {
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        minSdkVersion versions.minSdk
    }

    kotlinOptions {
        freeCompilerArgs += '-Xexplicit-api=warning'
    }

    namespace 'com.memfault.bort.reporting'
}

dependencies {
    api project(':reporting-libs:reporting-lib-common')
    implementation project(':structured-logd-aidl')

    implementation deps.serialization.json
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.memfault.bort'
            artifactId = 'reporting-lib'
            version = '1.3'

            afterEvaluate {
                from components.release
            }

            pom {
                name = 'Bort Reporting'
                description = 'Metric and event reporting for Memfault Bort SDK'
                url = 'https://github.com/memfault/bort'
                licenses {
                    license {
                        name = 'Memfault SDK License'
                        url = 'https://github.com/memfault/bort/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'memfault'
                        name = 'Memfault, Inc.'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/memfault/bort.git'
                    url = 'https://github.com/memfault/bort'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username getRepositoryUsername()
                password getRepositoryPassword()
            }
        }
    }
    signing {
        required {
            // signing is only required if the artifacts are to be published
            gradle.taskGraph.hasTask("publishToMavenRepository")
        }
        sign publishing.publications.release
    }
}
